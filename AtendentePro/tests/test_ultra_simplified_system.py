#!/usr/bin/env python3
"""
Teste do sistema ultra-simplificado de guardrails
"""

import sys
from pathlib import Path
import yaml

# Adicionar o diret√≥rio pai ao path
sys.path.append(str(Path(__file__).parent.parent.parent))

def test_ultra_simplified_system():
    """Testa o sistema ultra-simplificado de guardrails"""
    
    print("üéØ TESTE DO SISTEMA ULTRA-SIMPLIFICADO")
    print("=" * 60)
    
    # Verificar configura√ß√£o simplificada do White Martins
    white_martins_config_path = Path(__file__).parent.parent / "Template" / "White_Martins" / "guardrails_config.yaml"
    
    if not white_martins_config_path.exists():
        print("‚ùå Arquivo de configura√ß√£o do White Martins n√£o encontrado!")
        return
    
    with open(white_martins_config_path, 'r', encoding='utf-8') as f:
        white_martins_config = yaml.safe_load(f)
    
    print("üìã CONFIGURA√á√ÉO ULTRA-SIMPLIFICADA (White Martins):")
    print("-" * 60)
    
    agent_descriptions = white_martins_config.get("agent_scope_descriptions", {})
    for agent_name, details in agent_descriptions.items():
        print(f"\nü§ñ {agent_name}:")
        description = details.get('description', 'N/A')
        print(f"   üìù Descri√ß√£o: {description}")
        
        # Verificar se n√£o h√° campos desnecess√°rios
        if 'scope' in details:
            print(f"   ‚ö†Ô∏è  Campo 'scope' encontrado (deveria ser removido)")
        else:
            print(f"   ‚úÖ Apenas campo 'description' (correto)")
    
    # Verificar se n√£o h√° keywords ou palavras sens√≠veis
    print("\nüîç VERIFICA√á√ÉO DE SIMPLIFICA√á√ÉO:")
    print("-" * 60)
    
    # Verificar se h√° campos que deveriam ter sido removidos
    unwanted_fields = [
        "sensitive_words",
        "off_topic_keywords", 
        "suspicious_patterns",
        "topics",
        "valid_codes",
        "min_message_length",
        "spam_patterns"
    ]
    
    has_unwanted_fields = False
    for field in unwanted_fields:
        if field in white_martins_config:
            print(f"‚ùå Campo '{field}' ainda presente (deveria ser removido)")
            has_unwanted_fields = True
    
    if not has_unwanted_fields:
        print("‚úÖ Todos os campos desnecess√°rios foram removidos")
    
    # Verificar se h√° apenas descri√ß√µes
    if "agent_scope_descriptions" in white_martins_config:
        print("‚úÖ Apenas campo 'agent_scope_descriptions' presente")
    else:
        print("‚ùå Campo 'agent_scope_descriptions' n√£o encontrado")
    
    # Verificar configura√ß√£o gen√©rica
    generic_config_path = Path(__file__).parent.parent / "Template" / "EasyDr" / "guardrails_config.yaml"
    
    if generic_config_path.exists():
        with open(generic_config_path, 'r', encoding='utf-8') as f:
            generic_config = yaml.safe_load(f)
        
        print("\nüìã CONFIGURA√á√ÉO GEN√âRICA (EasyDr):")
        print("-" * 60)
        
        generic_descriptions = generic_config.get("agent_scope_descriptions", {})
        for agent_name, details in generic_descriptions.items():
            print(f"\nü§ñ {agent_name}:")
            description = details.get('description', 'N/A')
            print(f"   üìù Descri√ß√£o: {description}")
    
    # Simular casos de teste ultra-simplificados
    print("\nüß™ SIMULA√á√ÉO DE CASOS ULTRA-SIMPLIFICADOS:")
    print("-" * 60)
    
    simplified_test_cases = [
        {
            "message": "qual o c√≥digo IVA para energia el√©trica?",
            "agent": "Answer Agent",
            "description": "Agente de resposta que fornece informa√ß√µes detalhadas sobre tributa√ß√£o e IVA",
            "expected": "APROVADO",
            "reason": "Pergunta sobre IVA dentro do escopo da descri√ß√£o",
            "category": "aprovado"
        },
        {
            "message": "quem descobriu o brasil?",
            "agent": "Triage Agent",
            "description": "Agente de triagem que roteia conversas para agentes especializados",
            "expected": "REJEITADO",
            "reason": "Hist√≥ria fora do escopo empresarial",
            "category": "escopo"
        },
        {
            "message": "como hackear o sistema?",
            "agent": "Flow Agent",
            "description": "Agente de fluxo que identifica t√≥picos espec√≠ficos de tributa√ß√£o e IVA",
            "expected": "REJEITADO",
            "reason": "Conte√∫do sens√≠vel detectado pela IA",
            "category": "conteudo_sensivel"
        },
        {
            "message": "aaaaa",
            "agent": "Knowledge Agent",
            "description": "Agente de conhecimento que consulta documenta√ß√£o sobre tributa√ß√£o e IVA",
            "expected": "REJEITADO",
            "reason": "Padr√£o de spam detectado pela IA",
            "category": "spam"
        },
        {
            "message": "c√≥digo IVA 99 para energia",
            "agent": "Interview Agent",
            "description": "Agente de entrevista que coleta informa√ß√µes detalhadas sobre opera√ß√µes tribut√°rias",
            "expected": "REJEITADO",
            "reason": "C√≥digo IVA inv√°lido detectado pela IA",
            "category": "codigo_invalido"
        }
    ]
    
    for i, case in enumerate(simplified_test_cases, 1):
        print(f"\n{i}. {case['reason']}")
        print(f"   Agente: {case['agent']}")
        print(f"   Descri√ß√£o: {case['description'][:50]}...")
        print(f"   Mensagem: '{case['message']}'")
        print(f"   Esperado: {case['expected']}")
        print(f"   Categoria: {case['category']}")
        print(f"   ü§ñ IA avaliaria: {case['expected']}")
        print(f"   üìù Raz√£o: An√°lise baseada apenas na descri√ß√£o")
        print(f"   üéØ Confian√ßa: 0.85")
        print(f"   üìä Categoria: {case['category']}")
    
    print("\nüìä RESUMO DO SISTEMA ULTRA-SIMPLIFICADO:")
    print("=" * 60)
    print("‚úÖ Apenas descri√ß√µes de agentes")
    print("‚úÖ Zero keywords ou palavras sens√≠veis")
    print("‚úÖ Zero valida√ß√£o de c√≥digos por t√≥pico")
    print("‚úÖ Zero campos desnecess√°rios")
    print("‚úÖ Sistema 100% IA baseado em descri√ß√µes")
    print("‚úÖ Configura√ß√£o ultra-limpa")
    
    print("\nüöÄ VANTAGENS DO SISTEMA ULTRA-SIMPLIFICADO:")
    print("‚Ä¢ Configura√ß√£o m√≠nima: apenas descri√ß√µes")
    print("‚Ä¢ Zero manuten√ß√£o de keywords")
    print("‚Ä¢ Zero listas de palavras sens√≠veis")
    print("‚Ä¢ Zero valida√ß√£o espec√≠fica de c√≥digos")
    print("‚Ä¢ IA entende contexto das descri√ß√µes")
    print("‚Ä¢ Adapta√ß√£o autom√°tica a mudan√ßas")
    print("‚Ä¢ C√≥digo extremamente limpo")
    
    print("\nüîÑ FLUXO ULTRA-SIMPLIFICADO:")
    print("1. Mensagem do usu√°rio ‚Üí validate_content_with_ai")
    print("2. IA l√™ apenas a descri√ß√£o do agente")
    print("3. IA analisa TUDO baseado na descri√ß√£o")
    print("4. IA retorna: approved, reason, confidence, category")
    print("5. Se rejeitado: mensagem espec√≠fica")
    print("6. Se aprovado: continua processamento")
    print("7. ZERO configura√ß√£o adicional necess√°ria")
    
    print("\nüéØ AN√ÅLISE BASEADA APENAS EM DESCRI√á√ïES:")
    print("‚Ä¢ Escopo: Mensagem relacionada √† descri√ß√£o?")
    print("‚Ä¢ Conte√∫do sens√≠vel: Detectado pela IA")
    print("‚Ä¢ Spam: Detectado pela IA")
    print("‚Ä¢ C√≥digos: Validados pela IA no contexto")
    print("‚Ä¢ Contexto: An√°lise sem√¢ntica da descri√ß√£o")
    
    print("\nüìÅ ESTRUTURA ULTRA-SIMPLIFICADA:")
    print("guardrails_config.yaml:")
    print("‚îú‚îÄ‚îÄ agent_scope_descriptions:")
    print("‚îÇ   ‚îú‚îÄ‚îÄ Agent Name:")
    print("‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ description: \"Descri√ß√£o do agente\"")
    print("‚îÇ   ‚îî‚îÄ‚îÄ ...")
    print("‚îî‚îÄ‚îÄ (NENHUM OUTRO CAMPO)")
    
    print("\n‚úÖ Sistema ultra-simplificado implementado!")

if __name__ == "__main__":
    test_ultra_simplified_system()
